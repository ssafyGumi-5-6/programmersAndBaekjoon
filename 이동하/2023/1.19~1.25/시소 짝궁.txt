import java.util.*;

class Solution {
    public long solution(int[] weights) {
        long answer = 0;
        HashMap<Integer, Integer> map = new HashMap<>();
        for (int i : weights) {
            if (map.get(i) == null) map.put(i, 0);
            map.put(i, map.get(i) + 1);
        }
        // System.out.println(map);
        ArrayList<Integer> map_keySet = new ArrayList<>();
        for (int i : map.keySet()) {
            map_keySet.add(i);
            int temp = map.get(i);
            answer += ((long) temp) * (temp - 1) / 2;
        }
        System.out.println(map_keySet);
        int map_keySet_size = map_keySet.size();
        int [] [] ab = {{2, 2}, {2, 3}, {2, 4}, {3, 2}, {3, 4}, {4, 2}, {4, 3}};
        for (int i = 0; i < map_keySet_size - 1; i++) {
            for (int j = i + 1; j < map_keySet_size; j++) {
                for (int [] k : ab) {
                    if (((long) map_keySet.get(i)) * k[0] == ((long) map_keySet.get(j)) * k[1]) {
                        // System.out.println(map_keySet.get(i) + " " + map_keySet.get(j));
                        // System.out.println(k[0] + " " + k[1]);
                        // System.out.println(map.get(map_keySet.get(i)) + " " + map.get(map_keySet.get(j)));
                        answer += ((long) map.get(map_keySet.get(i))) * map.get(map_keySet.get(j));
                        break;
                    }
                }
            }
        }
        return answer;
    }
}