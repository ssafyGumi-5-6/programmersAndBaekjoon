import java.util.Arrays;

class Solution {
	int [] length_list = {1, 3, 7, 15, 31, 63};
	
	int dfsing(String s) {
		int mid = s.length() / 2;
		if (s.length() == 1 || !s.contains("1")) {
			return 1;
		}
		if (s.charAt(mid) == '0' && s.contains("1")) {
			return 0;
		}
		return dfsing(s.substring(0, mid)) * dfsing(s.substring(mid+1));
	}
	
    public int[] solution(long[] numbers) {
    	int numbers_len = numbers.length;
    	int [] answer = new int [numbers_len];
    	int answer_idx = 0;
        String [] bin = new String[numbers_len];
        for (int i = 0; i < numbers_len; i++) {
        	String binary = Long.toBinaryString(numbers[i]);
        	int bin_len = binary.length();
        	StringBuilder sb = new StringBuilder();
        	for (int j : length_list) {
        		if (bin_len <= j) {
        			for (int k = 0; k < j - bin_len; k++) {
        				sb.append("0");
        			}
        			sb.append(binary);
        			break;
        		}
        	}
        	bin[i] = sb.toString();
        }
        // 여기까지 왔다면 bin에는 트리의 정보가 들어가 있습니다.
//        for (String s : bin) {
//        	System.out.println(s);
//        }
        for (String s : bin) {
        	answer[answer_idx++] = dfsing(s);
        }
        // System.out.println(Arrays.toString(answer));
        return answer;
    }
}