import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;
        int N = Integer.parseInt(br.readLine());
        st = new StringTokenizer(br.readLine(), " ");
        int [] data = new int [N];
        for (int i = 0; i < N; i++) {
            data[i] = Integer.parseInt(st.nextToken());
        }
        int left = 0, right = 0;
        int last_left = -1, last_right = -1;
        long answer = 0;
        int [] check_array = new int [100_001];
        check_array[data[0]]++;
        boolean is_success = true;
        while (right < N-1) {
//            System.out.println(data[right+1]);
            if (check_array[data[right+1]] == 0) {
                is_success = true;
                right++;
                check_array[data[right]]++;
            } else {
                if (is_success) {
//                    System.out.println("실패에요");
//                    System.out.println(left + " " + right);
                    if (last_left != -1 && last_right != -1) {
                        answer -= (((long)last_right - left + 1) * (last_right - left + 2)) / 2;
                    }
                    answer += (((long)right - left + 1) * (right - left + 2)) / 2;
                    last_left = left;
                    last_right = right;
                    is_success = false;
                }
                check_array[data[left]]--;
                left++;
            }
//            System.out.println(check_array[1] + " " + check_array[2] + " " + check_array[3]);
        }
//        System.out.println(left + " " + right);
        if (last_left != -1 && last_right != -1) {
            answer -= (((long)last_right - left + 1) * (last_right - left + 2)) / 2;
        }
        answer += (((long)right - left + 1) * (right - left + 2)) / 2;
        System.out.println(answer);
    }
}
