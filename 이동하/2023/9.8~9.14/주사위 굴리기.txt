import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;

        int [] [] delta = {{},{0,1},{0,-1},{-1,0},{1,0}};
        int [] dice_number = new int [7];
        int [] dice_position = new int [2];
        st = new StringTokenizer(br.readLine(), " ");
        int N = Integer.parseInt(st.nextToken());
        int M = Integer.parseInt(st.nextToken());
        int x = Integer.parseInt(st.nextToken());
        int y = Integer.parseInt(st.nextToken());
        int K = Integer.parseInt(st.nextToken());
        int [] [] board = new int [N] [M];
        dice_position[0] = x;
        dice_position[1] = y;
        for (int i = 0; i < N; i++) {
            st = new StringTokenizer(br.readLine(), " ");
            for (int j = 0; j < M; j++) {
                board[i][j] = Integer.parseInt(st.nextToken());
            }
        }
        st = new StringTokenizer(br.readLine());
        int [] data = new int [K];
        for (int i = 0; i < K; i++) {
            int t = Integer.parseInt(st.nextToken());
            int a = dice_position[0] + delta[t][0];
            int b = dice_position[1] + delta[t][1];
            if (a < 0 || a >= N || b < 0 || b >= M) continue;
            dice_position[0] = a;
            dice_position[1] = b;
            if (t == 1) {
                int temp_number = dice_number[1];
                dice_number[1] = dice_number[4];
                dice_number[4] = dice_number[6];
                dice_number[6] = dice_number[3];
                dice_number[3] = temp_number;
            } else if (t == 2) {
                int temp_number = dice_number[1];
                dice_number[1] = dice_number[3];
                dice_number[3] = dice_number[6];
                dice_number[6] = dice_number[4];
                dice_number[4] = temp_number;
            } else if (t == 3) {
                int temp_number = dice_number[1];
                dice_number[1] = dice_number[5];
                dice_number[5] = dice_number[6];
                dice_number[6] = dice_number[2];
                dice_number[2] = temp_number;
            } else if (t == 4) {
                int temp_number = dice_number[1];
                dice_number[1] = dice_number[2];
                dice_number[2] = dice_number[6];
                dice_number[6] = dice_number[5];
                dice_number[5] = temp_number;
            }
            if (board[dice_position[0]][dice_position[1]] == 0) {
                board[dice_position[0]][dice_position[1]] = dice_number[6];
            } else {
                dice_number[6] = board[dice_position[0]][dice_position[1]];
                board[dice_position[0]][dice_position[1]] = 0;
            }
            System.out.println(dice_number[1]);
        }
    }
}
